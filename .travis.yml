language: generic

notifications:
  webhooks: https://coveralls.io/webhook

jobs:
  include:
    - name: "Backend cs-check"
      stage: lint
      language: php
      php:
        - 7.4.2
      cache:
        directories:
          - vendor
      before_script:
          - cd backend
          - composer install --no-interaction
          - cd ..
      script:
          - cd backend
          - composer cs-check
          - cd ..

    - name: "Frontend lint"
      stage: lint
      language: node_js
      node_js: '10'
      env:
        - NODE_ENV=development
      cache: npm
      before_install:
        - cd frontend/
      install:
        - npm install
      script:
        - npm run lint

    - name: "Print lint"
      stage: lint
      language: node_js
      node_js: '10'
      env:
        - NODE_ENV=development
      cache: npm
      before_install:
        - cd print/
      install:
        - npm install
      script:
        - npm run lint

    - name: "Backend tests"
      stage: test
      language: php
      php:
        - 7.4.2
      env:
        - DB=sqlite env=test
        - COVERALLS_PARALLEL=true
      cache:
        directories:
          - vendor
      before_script:
          - cd backend
          - composer install --no-interaction
          - cd ..
      script:
          - cd backend
          - mkdir -p build/logs
          - composer test
          - cd ..
      after_script:
          - backend/vendor/bin/php-coveralls -v --coverage_clover ./backend/build/logs/clover.xml --json_path ./backend/build/logs/coveralls-upload.json

    - name: "Frontend tests"
      stage: test
      language: node_js
      node_js: '10'
      env:
        - NODE_ENV=development
        - COVERALLS_PARALLEL=true
      cache: npm
      before_install:
        - cd frontend/
      install:
        - npm install
      script:
        - npm run test:unit
      after_script:
        - cat ./data/coverage/lcov.info | coveralls ..

    - name: "E2E tests"
      stage: test
      install:
        - docker-compose up -d --build composer backend frontend db
        - bash wait-for-container-startup.sh
      before_script:
        - cd frontend/
      script:
        - docker run -v $PWD:/e2e -w /e2e --network host -e CYPRESS_BASE_URL=http://localhost:3000 cypress/included:3.4.0

    - name: "Push images to Docker Hub"
      stage: "push-images"
      script: skip
      deploy:
        provider: script
        script: bash .docker-hub/push.sh
        on:
          all_branches: true
          condition: $TRAVIS_BRANCH =~ ^(devel|deploy-dev.ecamp3.ch)$

    - name: "Deploy"
      stage: deploy
      script: skip
      deploy:
        provider: script
        script: bash .deployment/deploy.sh
        on:
          all_branches: true

stages:
  - name: lint
  - name: test
  - name: "push-images"
    if: type = push
  - name: deploy
    if: branch = deploy-dev.ecamp3.ch
